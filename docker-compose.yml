version: '3.8'

services:
  mysql:
    container_name: mysql_server
    image: mysql:8.2.0
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: bank_service_db
      MYSQL_USER: appuser          # Create appuser
      MYSQL_PASSWORD: apppass      # Set password for appuser
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3307:3306"
    networks:
      - spring-ms
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-prootpass"]
      interval: 10s
      timeout: 5s
      retries: 5

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: rootpass  # Should match the MYSQL_ROOT_PASSWORD
    ports:
      - "8071:80"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - spring-ms

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin_server
    ports:
      - "9411:9411"
    networks:
      - spring-ms

  config-server:
    image: config-server:latest
    build:
      context: ./config-server
    ports:
      - "8888:8888"
    networks:
      - spring-ms
    restart: unless-stopped

  service-registry:
    image: service-registry:latest
    build:
      context: ./service-registry
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring-ms
    depends_on:
      - config-server
    restart: unless-stopped

  api-gateway:
    image: api-gateway:latest
    build:
      context: ./api-gateway
    ports:
      - "8222:8222"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring-ms
    depends_on:
      - service-registry
      - config-server
    restart: unless-stopped

  account-service:
    image: account-service:latest
    build:
      context: ./account-service
    ports:
      - "8091:8091"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring-ms
    depends_on:
      - mysql
      - service-registry
      - config-server

  transaction-service:
    image: transaction-service:latest
    build:
      context: ./transaction-service
    ports:
      - "8092:8092"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring-ms
    depends_on:
      - mysql
      - service-registry
      - config-server

networks:
  spring-ms:
    driver: bridge

volumes:
  mysql_data:
